# Generated by Django 3.1.1 on 2020-09-17 07:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(unique='True')),
                ('name', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'devices',
            },
        ),
        migrations.CreateModel(
            name='HumidityReading',
            fields=[
                ('humidity_id', models.AutoField(primary_key=True, serialize=False)),
                ('humidity', models.IntegerField()),
            ],
            options={
                'db_table': 'humidityReadings',
            },
        ),
        migrations.CreateModel(
            name='TemperatureReading',
            fields=[
                ('temperature_id', models.AutoField(primary_key=True, serialize=False)),
                ('temperature_Celcius', models.FloatField()),
                ('temperature_Fahrenheit', models.FloatField()),
            ],
            options={
                'db_table': 'temperatureReadings',
            },
        ),
        migrations.CreateModel(
            name='AirQuality',
            fields=[
                ('humidityreading_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='air_quality.humidityreading')),
                ('temperaturereading_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='air_quality.temperaturereading')),
                ('DateTime', models.DateTimeField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='air_quality.device')),
            ],
            options={
                'db_table': 'airQualityData',
            },
            bases=('air_quality.temperaturereading', 'air_quality.humidityreading'),
        ),
    ]
